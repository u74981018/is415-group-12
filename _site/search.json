[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "IS415",
    "section": "",
    "text": "Welcome to our project homepage for IS415: Geospatial Analytics and Applications.\nArmed conflicts have significant impacts on human security, development, and regional stability. Understanding the spatial and temporal dynamics of these conflicts is critical for policymakers, peacebuilders, and human rights advocates. We aim to visualise conflict trends, identify hotspots, and uncover patterns in our analysis of armed conflict in Indonesia. In particular, the Papua region has been a focal point of prolonged unrest, with political, ethnic, and economic tensions leading to recurring violence. Papua consists of 6 Indonesian provinces: Central Papua, Highland Papua, Papua, South Papua, Southwest Papua, and West Papua.\n\nProject Objectives\n\nTo map the spatial distribution of armed conflicts in Indonesia, with a focus on Papua, using ACLED (Armed Conflict Location & Event Data) data.\nTo identify conflict hotspots and temporal trends, highlighting regions within Papua most affected by violence.\nTo provide data-driven insights that can assist stakeholders in developing targeted peacebuilding initiatives or security interventions."
  },
  {
    "objectID": "pages/proposal.html",
    "href": "pages/proposal.html",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "",
    "text": "War. War never changes.\nThe Romans waged war to gather slaves and wealth. Spain built an empire from its lust for gold and territory. Hitler shaped a battered Germany into an economic superpower.\nBut war never changes.\nArmed conflicts have significant impacts on human security, development, and regional stability. Understanding the spatial and temporal dynamics of these conflicts is critical for policymakers, peacebuilders, and human rights advocates. We aim to visualise conflict trends, identify hotspots, and uncover patterns in our analysis of armed conflict in Indonesia. In particular, the Papua region has been a focal point of prolonged unrest, with political, ethnic, and economic tensions leading to recurring violence. Papua consists of 6 Indonesian provinces: Central Papua, Highland Papua, Papua, South Papua, Southwest Papua, and West Papua.\nThe Papua conflict has been ongoing since 1962, between Indonesia and the OPM. By 2007, an estimated 100,000 to 300,000 Papuans have been killed by Indonesian forces, and countless more having experienced violence.\nAs reported by Al Jazeera:\n\nWhen Joko Widodo became Indonesia’s president in 2014, there was hope for a resolution to the crisis. He released a handful of Papuan political prisoners and vowed to address the 2014 Paniai human rights abuse case, relating to an incident where the Indonesian army fired on hundreds of Papuan protesters, killed four teenagers, and wounded more than a dozen others in highland Papua. A promise to open West Papua to foreign journalists was seen by many as another sign of Widodo’s goodwill.\nHowever, the commitment to address the conflict fell apart in the waning days of his first administration.\nUnder Widodo’s second administration since 2019, Papuan grievances have intensified. Instead of the root causes of the conflict, the state has focused chiefly on development and infrastructure programmes, including the Trans Papua highway that’s under construction in some regencies in West Papua, a food estate, a special economic zone, strategic tourism areas and palm oil plantations.\n\nThe issues in Papua are of critical importance due to their significant humanitarian and socio-political implications. The frequent violence has stunted the region’s development, hindered economic growth, and caused long-term social fragmentation. However, despite the severity of the situation, Papua often remains underreported on a global scale. Understanding the drivers and geography of conflict in this region can pave the way for more effective peacebuilding. What makes this problem particularly interesting—and difficult to solve—is the intersection of spatial, political, and socioeconomic complexities. Armed conflict data for Papua is not only vast but also deeply interwoven with factors such as ethnic diversity and cultural practices.\nThis project thus aims to shed light on the conflict and inform intervention strategies, contributing to long-term peace and stability.\n\n\n\nTo map the spatial distribution of armed conflicts in Indonesia, with a focus on Papua, using ACLED (Armed Conflict Location & Event Data) data.\nTo identify conflict hotspots and temporal trends, highlighting regions within Papua most affected by violence.\nTo provide data-driven insights that can assist stakeholders in developing targeted peacebuilding initiatives or security interventions.\n\n\n\n\n\nConflict Map: A geospatial visualisation of conflict events across Indonesia, with the emphasis on the Papua region. The map will include filters for conflict type, actor groups, and event severity.\nTemporal Analysis: Track changes in conflict intensity and frequency over time, helping identify peak periods of violence or emerging trends.\nHotspot Identification: Spatial analytics to pinpoint regions that are consistently affected by armed conflic."
  },
  {
    "objectID": "pages/proposal.html#introduction",
    "href": "pages/proposal.html#introduction",
    "title": "Project Proposal: Armed Conflict in Indonesia",
    "section": "",
    "text": "War. War never changes.\nThe Romans waged war to gather slaves and wealth. Spain built an empire from its lust for gold and territory. Hitler shaped a battered Germany into an economic superpower.\nBut war never changes.\nArmed conflicts have significant impacts on human security, development, and regional stability. Understanding the spatial and temporal dynamics of these conflicts is critical for policymakers, peacebuilders, and human rights advocates. We aim to visualise conflict trends, identify hotspots, and uncover patterns in our analysis of armed conflict in Indonesia. In particular, the Papua region has been a focal point of prolonged unrest, with political, ethnic, and economic tensions leading to recurring violence. Papua consists of 6 Indonesian provinces: Central Papua, Highland Papua, Papua, South Papua, Southwest Papua, and West Papua.\nThe Papua conflict has been ongoing since 1962, between Indonesia and the OPM. By 2007, an estimated 100,000 to 300,000 Papuans have been killed by Indonesian forces, and countless more having experienced violence.\nWhen Joko Widodo became Indonesia’s president in 2014, there was hope for a resolution to the crisis. He released a handful of Papuan political prisoners and vowed to address the 2014 Paniai human rights abuse case, relating to an incident where the Indonesian army fired on hundreds of Papuan protesters, killed four teenagers, and wounded more than a dozen others in highland Papua. A promise to open West Papua to foreign journalists was seen by many as another sign of Widodo’s goodwill.\nHowever, the commitment to address the conflict fell apart in the waning days of his first administration.\nUnder Widodo’s second administration since 2019, Papuan grievances have intensified. Instead of the root causes of the conflict, the state has focused chiefly on development and infrastructure programmes, including the Trans Papua highway that’s under construction in some regencies in West Papua, a food estate, a special economic zone, strategic tourism areas and palm oil plantations.\nThe issues in Papua are of critical importance due to their significant humanitarian and socio-political implications. The frequent violence has stunted the region’s development, hindered economic growth, and caused long-term social fragmentation. However, despite the severity of the situation, Papua often remains underreported on a global scale. Understanding the drivers and geography of conflict in this region can pave the way for more effective peacebuilding. What makes this problem particularly interesting—and difficult to solve—is the intersection of spatial, political, and socioeconomic complexities. Armed conflict data for Papua is not only vast but also deeply interwoven with factors such as ethnic diversity and cultural practices.\nThis project thus aims to shed light on the conflict and inform intervention strategies, contributing to long-term peace and stability.\n\n\n\nTo map the spatial distribution of armed conflicts in Indonesia, with a focus on Papua, using ACLED (Armed Conflict Location & Event Data) data.\nTo identify conflict hotspots and temporal trends, highlighting regions within Papua most affected by violence.\nTo provide data-driven insights that can assist stakeholders in developing targeted peacebuilding initiatives or security interventions.\n\n\n\n\n\nConflict Map: A geospatial visualisation of conflict events across Indonesia, with the emphasis on the Papua region. The map will include filters for conflict type, actor groups, and event severity.\nTemporal Analysis: Track changes in conflict intensity and frequency over time, helping identify peak periods of violence or emerging trends.\nHotspot Identification: Spatial analytics to pinpoint regions that are consistently affected by armed conflic."
  },
  {
    "objectID": "pages/proposal.html#exploratory-data-analysis",
    "href": "pages/proposal.html#exploratory-data-analysis",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "3.1 Exploratory Data Analysis",
    "text": "3.1 Exploratory Data Analysis\n\nUsers will be able to view an interactive point map of armed conflict events in the Indonesian provinces of Southwest Papua, West Papua, Central Papua, Papua, Highland Papua and South Papua, occurring from January 2015 to June 2024. The map will allow users to overlay administrative (province; regency and city) boundaries and to filter event points by:\n\nStudy areas (regencies and cities)\nEvent type\nActors involved\nNumber of reported fatalities\nTime period (start date and end date)\n\nUsers will also be able to view an interactive graph of the aggregate number of armed conflict events over time. They will be also be able to view the time series data for their chosen:\n\nStudy areas (regencies and cities)\nEvent type\nActors involved\nNumber of reported fatalities\nTime period (start date and end date)"
  },
  {
    "objectID": "pages/proposal.html#spatial-point-patterns-analysis-1st-and-2nd-order",
    "href": "pages/proposal.html#spatial-point-patterns-analysis-1st-and-2nd-order",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "3.2 Spatial Point Patterns Analysis: 1st and 2nd Order",
    "text": "3.2 Spatial Point Patterns Analysis: 1st and 2nd Order\n\nUsers will be able to derive kernel density estimation (KDE) layers for visualising the spatial intensity of armed conflict point events over a chosen study area, during a time period stipulated by them.\nThey will also be able to choose a:\n\nBandwidth selection method (bw.diggle, bw.CvL, bw.scott, bw.ppl, and fixed or adaptive bandwidth)\nSmoothing kernel method (Gaussian, Epanechnikov, Quartic, or Disc)\n\nUsers will also be able to perform 2nd order spatial point patterns analysis on the armed conflict point events occurring within the chosen study area and time period, and conduct a Monte Carlo test of complete spatial randomness on the point process, using any of the following functions:\n\nG-function\nF-function\nThey will also be able to specify the edge correction to be applied and the number of simulations to be generated in the Monte Carlo test."
  },
  {
    "objectID": "pages/proposal.html#spatio-point-patterns-analysis-1st-and-2nd-order",
    "href": "pages/proposal.html#spatio-point-patterns-analysis-1st-and-2nd-order",
    "title": "Project Proposal: Armed Conflict in Indonesia",
    "section": "3.3 Spatio Point Patterns Analysis: 1st and 2nd Order",
    "text": "3.3 Spatio Point Patterns Analysis: 1st and 2nd Order\n\nUsers will be able to derive quarterly or monthly spatiotemporal kernel density estimation (STKDE) layers for armed conflict point events in their chosen study area, which will be displayed in a single animation.\nUsers will be able to compute and visualise the space-time inhomogeneous K-function for their chosen study area, which will allow them to assess the spatiotemporal aggregation or regularity of the point process."
  },
  {
    "objectID": "pages/proposal.html#exploratory-data-analysis-page",
    "href": "pages/proposal.html#exploratory-data-analysis-page",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "Exploratory Data Analysis Page",
    "text": "Exploratory Data Analysis Page"
  },
  {
    "objectID": "pages/proposal.html#spatial-point-patterns-analysis-page",
    "href": "pages/proposal.html#spatial-point-patterns-analysis-page",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "Spatial Point Patterns Analysis Page",
    "text": "Spatial Point Patterns Analysis Page"
  },
  {
    "objectID": "pages/proposal.html#spatiotemporal-point-patterns-analysis-page",
    "href": "pages/proposal.html#spatiotemporal-point-patterns-analysis-page",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "Spatiotemporal Point Patterns Analysis Page",
    "text": "Spatiotemporal Point Patterns Analysis Page"
  },
  {
    "objectID": "pages/proposal.html#spatiotemporal-point-patterns-analysis-1st-and-2nd-order",
    "href": "pages/proposal.html#spatiotemporal-point-patterns-analysis-1st-and-2nd-order",
    "title": "Project Overview: Armed Conflict in Indonesia",
    "section": "3.3 Spatiotemporal Point Patterns Analysis: 1st and 2nd Order",
    "text": "3.3 Spatiotemporal Point Patterns Analysis: 1st and 2nd Order\n\nUsers will be able to derive quarterly spatiotemporal kernel density estimation (STKDE) layers for armed conflict point events in their chosen study area, which will be displayed in a single animation."
  },
  {
    "objectID": "pages/data_wrangling.html",
    "href": "pages/data_wrangling.html",
    "title": "Data Wrangling",
    "section": "",
    "text": "We prepare the following data layers:\n\nA study area layer in sf polygon feature format, at Indonesia’s admin1 (provinsi/province) level.\nA study area layer in sf polygon feature format, at Indonesia’s admin2 (kota & kabupaten/city & regency) level.\nA point events layer in sf point feature format, showing the location, date and other attributes of armed conflict events in the Papua region.\n\n\n\n\nThe following R packages are used:\n\ntidyverse, a collection of R packages designed for data science, and which provides functions to import, transform, and visualise the data.\nsf, to import, manage and process vector-based geospatial data in R.\ntmap, which provides functions for plotting cartographic quality static point patterns maps or interactive maps.\nspatstat, a comprehensive open-source toolbox for analysing Spatial Point Patterns.\nrmapshaper, a package for editing and simplifying sf objects.\n\np_load() function of pacman package is used to install and load these packages into the R environment.\n\npacman::p_load(tidyverse, sf, tmap, spatstat, rmapshaper)\n\n\n\n\n\n\nImport Batas_Wilayah_KelurahanDesa_10K_AR as a simple features object, which we name admin. This dataset provides information on Indonesia’s admin4 (village/desa and kelurahan) administrative boundaries as of 2023.\n\nadmin &lt;- st_read(dsn = \"data/BATAS WILAYAH KELURAHAN-DESA 10K\", layer = \"Batas_Wilayah_KelurahanDesa_10K_AR\")\n\nglimpse(admin)\n\nWe also observe that admin is projected in WGS 84.\nSometimes, when importing geospatial data into R, the coordinate system of the source data is wrongly assigned during the importing process. We check the CRS.\n\nst_crs(admin)\n\nThe EPSG code indicated is 4326, which is correct since the data is projected in WGS 84.\n\n\n\nadmin contains 83518 features, each representing a village. However, for our study, we only require the data for villages in the Papua region, which consists of 6 provinces (as of 2023): Papua Selatan (South Papua), Papua Tengah (Central Papua), Papua Pegunungan (Mountains Papua), Papua Barat Daya (South-West Papua), Papua Barat (West Papua), and Papua.\nThe WADMPR field of admin contains the name of the province that each village belongs to.\nAll the provinces in the Papua region have the word “Papua” in their names. In the following code chunk, we extract the rows of admin that contain the word “Papua” in the WADMPR field and save them as a new object papua.\ngrepl() of base R is used to obtain a logical vector indicating whether each element of admin$WADMPR contains a match to the word “Papua”. Then, filter() of dplyr (part of the tidyverse) is used to retain only the corresponding rows of admin_. Next, rename() of dplyr is used to rename the WADMPR field to “Province”.\n\npapua &lt;- admin %&gt;%\n  filter(grepl(\"Papua\", WADMPR, fixed = TRUE)) %&gt;%\n  rename(Province = WADMPR)\n\npapua\n\nAs required, papua is a sf polygon data.frame. It has 7374 features.\nFinally, we check whether geometries of all the features in papua are valid.\n\nlength(which(st_is_valid(papua) == TRUE))\n\nOnly 7371 features have valid geometries, out of a total of 7374. Using st_make_valid() of sf, we make the invalid geometries valid. Next, we use mutate() of dplyr to replace the existing geometry column with a new one containing the valid geometries. We save the result as a new sf polygon data.frame, papua_cleaned.\n\npapua_cleaned &lt;- papua %&gt;%\n  mutate(geometry = st_make_valid(geometry))\n\nlength(which(st_is_valid(papua_cleaned) == TRUE))\n\npapua_cleaned is projected in WGS 84. In this code chunk, we reproject it in the projected coordinate system in the DGN95 / UTM zone 53S coordinate system, and save the reprojected data as a new object papua_23883.\n\npapua_23883 &lt;- st_transform(papua_cleaned, crs = 23883) \n\nst_geometry(papua_23883)\n\n\n\n\n\n\n\nThe WADMKK field of papua_cleaned contains the name of each city/regency that each village belongs to.\nWe first use rename() of dplyr to rename the WADMKK field to “City/Regency”. Next, we use group_by() of dplyr to group the different villages according to the province as well as city/regency they belong in. Then, we use summarise() of dplyr and st_union() of sf to combine the geometries of the different villages within each city/regency and dissolve the boundaries between villages, thus obtaining the admin2 (city/regency) level boundaries. Finally, we use ms_simplify() of rmapshaper to simplify the polygons, using the Visvalingam algorithm.\n\npapua_adm2 &lt;- papua_23883 %&gt;%\n  rename(`City/Regency` = WADMKK) %&gt;%\n  group_by(Province, `City/Regency`) %&gt;%\n  summarise(geometry = st_union(geometry)) %&gt;%\n  ms_simplify()\n\npapua_adm2\n\nWe can now save the papua_adm2 study area layer using write_rds() of readr, part of the tidyverse.\n\nwrite_rds(papua_adm2, \"data/rds/papua_adm2.rds\")\n\nWe visualise the admin2 boundaries in papua_adm2 using plot().\n\nplot(papua_adm2[\"City/Regency\"])\n\n\n\n\n\n\n\n\n\n\n\nNow, we can use group_by() of dplyr to group the different cities/regencies according to the province they belong in. Then, we use summarise() of dplyr and st_union() of sf to combine the geometries of the different cities/regencies within each province and dissolve the boundaries between them, thus obtaining the admin1 (province) level boundaries.\n\npapua_adm1 &lt;- papua_adm2 %&gt;%\n  group_by(Province) %&gt;%\n  summarise(geometry = st_union(geometry))\n\nWe can now save the papua_adm1 study area layer using the write_rds() function of readr, part of the tidyverse.\n\nwrite_rds(papua_adm1, \"data/rds/papua_adm1.rds\")\n\n\nplot(papua_adm1)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWe import 2015-01-01-2024-06-30-Indonesia.csv. This dataset provides location, date, and other attribute information on 6 types of armed conflict events in Indonesia occurring from 1 January 2015 to 30 June 2024. Since it is in csv format, we use the read_csv() function of readr, part of the tidyverse, to import it, and save it as an object named points.\n\npoints &lt;- read_csv(\"data/2015-01-01-2024-06-30-Indonesia.csv\")\n\nglimpse(points)\n\nRows: 17,116\nColumns: 31\n$ event_id_cnty      &lt;chr&gt; \"IDN17267\", \"IDN17269\", \"IDN17293\", \"IDN17428\", \"ID…\n$ event_date         &lt;chr&gt; \"30 June 2024\", \"30 June 2024\", \"30 June 2024\", \"30…\n$ year               &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 202…\n$ time_precision     &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ disorder_type      &lt;chr&gt; \"Political violence\", \"Demonstrations\", \"Demonstrat…\n$ event_type         &lt;chr&gt; \"Violence against civilians\", \"Protests\", \"Protests…\n$ sub_event_type     &lt;chr&gt; \"Attack\", \"Peaceful protest\", \"Peaceful protest\", \"…\n$ actor1             &lt;chr&gt; \"Military Forces of Indonesia (2014-)\", \"Protesters…\n$ assoc_actor_1      &lt;chr&gt; NA, \"AJI: Alliance of Independent Journalists; Jour…\n$ inter1             &lt;chr&gt; \"State forces\", \"Protesters\", \"Protesters\", \"Rebel …\n$ actor2             &lt;chr&gt; \"Civilians (Indonesia)\", NA, NA, NA, NA, \"Civilians…\n$ assoc_actor_2      &lt;chr&gt; \"TPNPB: West Papua National Liberation Army\", NA, N…\n$ inter2             &lt;chr&gt; \"Civilians\", NA, NA, NA, NA, \"Civilians\", NA, \"Stat…\n$ interaction        &lt;chr&gt; \"State forces-Civilians\", \"Protesters only\", \"Prote…\n$ civilian_targeting &lt;chr&gt; \"Civilian targeting\", NA, NA, NA, NA, \"Civilian tar…\n$ iso                &lt;dbl&gt; 360, 360, 360, 360, 360, 360, 360, 360, 360, 360, 3…\n$ region             &lt;chr&gt; \"Southeast Asia\", \"Southeast Asia\", \"Southeast Asia…\n$ country            &lt;chr&gt; \"Indonesia\", \"Indonesia\", \"Indonesia\", \"Indonesia\",…\n$ admin1             &lt;chr&gt; \"Central Papua\", \"Jakarta\", \"East Java\", \"West Java…\n$ admin2             &lt;chr&gt; \"Intan Jaya\", \"Central Jakarta\", \"Surabaya\", \"Bogor…\n$ admin3             &lt;chr&gt; \"Sugapa\", \"Gambir\", \"Genteng\", \"Central Bogor\", \"Re…\n$ location           &lt;chr&gt; \"Sugapa\", \"Jakarta - Central\", \"Surabaya\", \"Bogor\",…\n$ latitude           &lt;dbl&gt; -3.7430, -6.1806, -7.2492, -6.5944, -6.9222, 3.5833…\n$ longitude          &lt;dbl&gt; 137.0500, 106.8283, 112.7510, 106.7891, 107.6070, 9…\n$ geo_precision      &lt;dbl&gt; 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ source             &lt;chr&gt; \"Human Rights Monitor\", \"Kompas\", \"Tribunnews\", \"Ko…\n$ source_scale       &lt;chr&gt; \"Other\", \"National\", \"National\", \"National\", \"Natio…\n$ notes              &lt;chr&gt; \"On 30 June 2024, the Indonesian military forces ar…\n$ fatalities         &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ tags               &lt;chr&gt; NA, \"crowd size=no report\", \"crowd size=no report\",…\n$ timestamp          &lt;dbl&gt; 1720552459, 1720552459, 1720552459, 1721769310, 172…\n\n\n\n\n\nThe longitude and latitude fields capture the x- and y-coordinates of the data points respectively. They appear to be in the WGS 84 geographic coordinate system (in which latitudes range from -90 to 90 and longitudes range from 0 to 360).\nWe convert points to an sf object.\n\npoints_sf &lt;- st_as_sf(points, coords = c(\"longitude\",\"latitude\"), crs = 4326)\n\nst_geometry(points_sf)\n\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 95.2127 ymin: -10.7323 xmax: 140.8694 ymax: 5.8925\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nWe reproject points_sf in the DGN95 / UTM zone 53S coordinate system, and save the reprojected data as a new object points_23883.\n\npoints_23883 &lt;- st_transform(points_sf, crs = 23883)\n\nst_geometry(points_23883)\n\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -4304403 ymin: 8787709 xmax: 1153416 ymax: 10846150\nProjected CRS: DGN95 / UTM zone 53S\nFirst 5 geometries:\n\n\n\n\n\npoints_23883 provides information on armed conflict events throughout Indonesia, and the admin1 field contains the name of the province where each point event took place.\nAs mentioned earlier, our study area is the region of Papua, consisting of 6 provinces. 4 of these, namely Papua Selatan (South Papua), Papua Tengah (Central Papua), Papua Pegunungan (Highland Papua), Papua Barat Daya (Southwest Papua), were only created in 2022, when they were carved out of the original 2 provinces of Papua and Papua Barat (West Papua).\nWe use filter() and grepl() to extract only the armed conflict events that take place in provinces containing the word “Papua” from points_23883. In addition, we use select(), also part of dplyr, to retain only the fields containing the event date, event type, involved parties (actor 1 and actor 2), the province (admin 1) and regency/city (admin2) where the event occurred, the number of fatalities, notes about the event, and the point geometry, for each event.\nLastly, we use mutate() from dplyr and dmy() of base R to convert the values in the event_date field to Date class.\n\npoints_study &lt;- points_23883 %&gt;%\n  filter(grepl(\"Papua\", admin1, fixed = TRUE)) %&gt;%\n  select(event_date, event_type, actor1, actor2, admin1, admin2, fatalities, notes, geometry) %&gt;%\n  mutate(event_date = dmy(event_date))\n\npoints_study\n\nSimple feature collection with 2942 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -23320.68 ymin: 9056317 xmax: 1153416 ymax: 9956392\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 2,942 × 9\n   event_date event_type            actor1 actor2 admin1 admin2 fatalities notes\n * &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 2024-06-30 Violence against civ… Milit… Civil… Centr… Intan…          1 On 3…\n 2 2024-06-29 Strategic developmen… Civil… &lt;NA&gt;   Centr… Puncak          0 Disp…\n 3 2024-06-29 Battles               TPNPB… Milit… Centr… Puncak          1 On 2…\n 4 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 5 2024-06-28 Protests              Prote… &lt;NA&gt;   South… Sorong          0 On 2…\n 6 2024-06-28 Battles               TPNPB… Milit… Centr… Puncak          0 On 2…\n 7 2024-06-27 Protests              Prote… &lt;NA&gt;   South… South…          0 On 2…\n 8 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 9 2024-06-22 Battles               Milit… TPNPB… South… Maybr…          0 On 2…\n10 2024-06-22 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n# ℹ 2,932 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\nThere are 2942 features in the points_study sf point data.frame, corresponding to 2942 armed conflict point events.\nWe verify that the geometries of all the point events are valid.\n\nlength(which(st_is_valid(points_study) == TRUE))\n\n[1] 2942\n\n\n\n\n\nIn spatial point patterns analysis, a significant issue is the presence of duplicates. The statistical methodology used for spatial points patterns processes is based largely on the assumption that processes are simple, that the points cannot be coincident.\nTo check for duplicate points in points_study, we use the following code chunk:\n\nany(duplicated(points_study$geometry))\n\n[1] TRUE\n\n\nTo tackle this problem, we use st_jitter() of sf to slightly shift the duplicate points by 10 meters each such that they no longer occur at the same point, to make them unique.\n\npoints_study_jitter &lt;- points_study %&gt;%\n  st_jitter(amount = 10)\n\n\n\n\n\nIn papua_adm1 and papua_adm2, the province and city/regency names appear to be in Bahasa Indonesia. On the other hand, in the admin1 and admin2 fields of points_study, the names given are in English.\nThe following code chunk uses filter(), group_by() and summarize() of dplyr to identify the English-language province names in points_study_jitter that are different from the Bahasa Indonesia names in papua_adm1, and vice versa.\n\npoints_study_jitter %&gt;%\n  filter(!(admin1 %in% papua_adm1$Province)) %&gt;%\n  group_by(admin1) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -23323.36 ymin: 9056307 xmax: 1149980 ymax: 9956383\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  admin1                                                                geometry\n  &lt;chr&gt;                                                         &lt;MULTIPOINT [m]&gt;\n1 Central Papua   ((509633.3 9625055), (548483.5 9624829), (548483.9 9624835), …\n2 Highland Papua  ((799229.9 9492617), (815137.3 9535327), (815462.5 9508162), …\n3 South Papua     ((847413.8 9386172), (847415.2 9386177), (847415.9 9386180), …\n4 Southwest Papua ((-23323.36 9777960), (34593.1 9953391), (34607 9953383), (81…\n5 West Papua      ((199616.3 9676358), (199616.4 9676347), (199618.8 9676360), …\n\npapua_adm1 %&gt;%\n  filter(!(Province %in% points_study_jitter$admin1)) %&gt;%\n  group_by(Province) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -135197 ymin: 8985733 xmax: 1167404 ymax: 10119770\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  Province                                                              geometry\n  &lt;chr&gt;                                                           &lt;GEOMETRY [m]&gt;\n1 Papua Barat      MULTIPOLYGON (((257409.2 9566412, 257428.4 9566326, 256937.4…\n2 Papua Barat Daya MULTIPOLYGON (((-87979.27 9792818, -88115.85 9792918, -88128…\n3 Papua Pegunungan POLYGON ((941726.2 9472843, 941327.6 9472931, 940247.6 94728…\n4 Papua Selatan    MULTIPOLYGON (((885530.8 9077392, 885418.5 9077170, 885388.7…\n5 Papua Tengah     MULTIPOLYGON (((522662 9507146, 522824.3 9506943, 522629 950…\n\n\nNext, we use mutate() of dplyr and str_replace_all() of stringr (also part of the tidyverse) to replace the English-language names in points_study with the Bahasa Indonesia equivalents from papua_adm1.\n\npoints_study1 &lt;- points_study_jitter %&gt;%\n  mutate(admin1 = str_replace_all(admin1, c(\"Central Papua\" = \"Papua Tengah\", \"Highland Papua\" = \"Papua Pegunungan\", \"South Papua\" = \"Papua Selatan\", \"Southwest Papua\" = \"Papua Barat Daya\", \"West Papua\" = \"Papua Barat\")))\n\nNext, we use filter(), group_by() and summarize() of dplyr again to identify the city/regency names in points_study1 that are different from the Bahasa Indonesia names in papua_adm2, and vice versa.\n\npoints_study1 %&gt;%\n  filter(!(admin2 %in% papua_adm2$`City/Regency`)) %&gt;%\n  group_by(admin2) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: 148961.1 ymin: 9593967 xmax: 951799.2 ymax: 9867860\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  admin2                                                                geometry\n  &lt;chr&gt;                                                         &lt;MULTIPOINT [m]&gt;\n1 Central Mamberamo ((951786 9593984), (951790.2 9593972), (951792.7 9593974), …\n2 Fakfak            ((199616.3 9676358), (199616.4 9676347), (199618.8 9676360)…\n3 South Manokwari   ((407185.2 9833544), (407187 9833534), (407189.5 9833533), …\n4 South Sorong      ((148961.1 9842817), (151801.5 9837437), (164414.4 9860473)…\n5 Yapen Islands     ((602125.8 9805478), (602136 9805475), (607100.1 9801749), …\n\npapua_adm2 %&gt;%\n  filter(!(`City/Regency` %in% points_study1$admin2)) %&gt;%\n  group_by(`City/Regency`) %&gt;%\n  summarize()\n\nSimple feature collection with 8 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 75213.72 ymin: 9561238 xmax: 1168500 ymax: 10103670\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 8 × 2\n  `City/Regency`                                                        geometry\n  &lt;chr&gt;                                                           &lt;GEOMETRY [m]&gt;\n1 Fak Fak           MULTIPOLYGON (((177915.4 9672819, 177758.2 9672809, 177621.…\n2 Kepulauan Yapen   MULTIPOLYGON (((552706.1 9814300, 552956.7 9814289, 553283.…\n3 Kota Jayapura     MULTIPOLYGON (((1168366 9684435, 1168420 9691385, 1168500 9…\n4 Kota Sorong       MULTIPOLYGON (((83597.88 9894877, 83682.29 9894911, 83547.5…\n5 Mamberamo Tengah  POLYGON ((903830.1 9582811, 904487.2 9583295, 904744.8 9583…\n6 Manokwari Selatan POLYGON ((354405.2 9830783, 354512.5 9830718, 354861 983063…\n7 Sorong Selatan    MULTIPOLYGON (((141431.6 9825800, 142083.3 9825339, 141791.…\n8 Supiori           MULTIPOLYGON (((548701 9904498, 548579.1 9904430, 548618.9 …\n\n\nWe use mutate() of dplyr and str_replace_all() of stringr to replace the names in points_study1 with the corresponding equivalents from papua_adm2.\n\npoints_study_final &lt;- points_study1 %&gt;%\n  mutate(admin2 = str_replace_all(admin2, c(\"Central Mamberamo\" = \"Mamberamo Tengah\", \"Fakfak\" = \"Fak Fak\", \"South Manokwari\" = \"Manokwari Selatan\", \"South Sorong\" = \"Sorong Selatan\", \"Yapen Islands\" = \"Kepulauan Yapen\")))\n\npoints_study_final\n\nSimple feature collection with 2942 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -23323.36 ymin: 9056307 xmax: 1153416 ymax: 9956383\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 2,942 × 9\n   event_date event_type            actor1 actor2 admin1 admin2 fatalities notes\n * &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 2024-06-30 Violence against civ… Milit… Civil… Papua… Intan…          1 On 3…\n 2 2024-06-29 Strategic developmen… Civil… &lt;NA&gt;   Papua… Puncak          0 Disp…\n 3 2024-06-29 Battles               TPNPB… Milit… Papua… Puncak          1 On 2…\n 4 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 5 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua… Sorong          0 On 2…\n 6 2024-06-28 Battles               TPNPB… Milit… Papua… Puncak          0 On 2…\n 7 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua… Soron…          0 On 2…\n 8 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 9 2024-06-22 Battles               Milit… TPNPB… Papua… Maybr…          0 On 2…\n10 2024-06-22 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n# ℹ 2,932 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\nWe can now save the points_study_final layer using write_rds().\n\nwrite_rds(points_study_final, \"data/rds/points_study_final.rds\")\n\nWe can now plot all the layers using tmap.\n\ntmap_mode(\"plot\")\n\ntm_shape(papua_adm1) +\n  tm_polygons(col = \"MAP_COLORS\") +\n  tm_shape(papua_adm2) +\n  tm_polygons(col = \"MAP_COLORS\") +\n  tm_shape(points_study_final) +\n  tm_dots()"
  },
  {
    "objectID": "pages/data_wrangling.html#overview",
    "href": "pages/data_wrangling.html#overview",
    "title": "Data Wrangling",
    "section": "",
    "text": "We prepare the following data layers:\n\nA study area layer in sf polygon feature format, at Indonesia’s admin1 (provinsi/province) level.\nA study area layer in sf polygon feature format, at Indonesia’s admin2 (kota & kabupaten/city & regency) level.\nA point events layer in sf point feature format, showing the location, date and other attributes of armed conflict events in the Papua region."
  },
  {
    "objectID": "pages/data_wrangling.html#packages",
    "href": "pages/data_wrangling.html#packages",
    "title": "Data Wrangling",
    "section": "",
    "text": "The following R packages are used:\n\ntidyverse, a collection of R packages designed for data science, and which provides functions to import, transform, and visualise the data.\nsf, to import, manage and process vector-based geospatial data in R.\ntmap, which provides functions for plotting cartographic quality static point patterns maps or interactive maps.\nspatstat, a comprehensive open-source toolbox for analysing Spatial Point Patterns.\nrmapshaper, a package for editing and simplifying sf objects.\n\np_load() function of pacman package is used to install and load these packages into the R environment.\n\npacman::p_load(tidyverse, sf, tmap, spatstat, rmapshaper)"
  },
  {
    "objectID": "pages/data_wrangling.html#preparing-geospatial-data",
    "href": "pages/data_wrangling.html#preparing-geospatial-data",
    "title": "Data Wrangling",
    "section": "",
    "text": "Import Batas_Wilayah_KelurahanDesa_10K_AR as a simple features object, which we name admin. This dataset provides information on Indonesia’s admin4 (village/desa and kelurahan) administrative boundaries as of 2023.\n\nadmin &lt;- st_read(dsn = \"data/BATAS WILAYAH KELURAHAN-DESA 10K\", layer = \"Batas_Wilayah_KelurahanDesa_10K_AR\")\n\nglimpse(admin)\n\nWe also observe that admin is projected in WGS 84.\nSometimes, when importing geospatial data into R, the coordinate system of the source data is wrongly assigned during the importing process. We check the CRS.\n\nst_crs(admin)\n\nThe EPSG code indicated is 4326, which is correct since the data is projected in WGS 84.\n\n\n\nadmin contains 83518 features, each representing a village. However, for our study, we only require the data for villages in the Papua region, which consists of 6 provinces (as of 2023): Papua Selatan (South Papua), Papua Tengah (Central Papua), Papua Pegunungan (Mountains Papua), Papua Barat Daya (South-West Papua), Papua Barat (West Papua), and Papua.\nThe WADMPR field of admin contains the name of the province that each village belongs to.\nAll the provinces in the Papua region have the word “Papua” in their names. In the following code chunk, we extract the rows of admin that contain the word “Papua” in the WADMPR field and save them as a new object papua.\ngrepl() of base R is used to obtain a logical vector indicating whether each element of admin$WADMPR contains a match to the word “Papua”. Then, filter() of dplyr (part of the tidyverse) is used to retain only the corresponding rows of admin_. Next, rename() of dplyr is used to rename the WADMPR field to “Province”.\n\npapua &lt;- admin %&gt;%\n  filter(grepl(\"Papua\", WADMPR, fixed = TRUE)) %&gt;%\n  rename(Province = WADMPR)\n\npapua\n\nAs required, papua is a sf polygon data.frame. It has 7374 features.\nFinally, we check whether geometries of all the features in papua are valid.\n\nlength(which(st_is_valid(papua) == TRUE))\n\nOnly 7371 features have valid geometries, out of a total of 7374. Using st_make_valid() of sf, we make the invalid geometries valid. Next, we use mutate() of dplyr to replace the existing geometry column with a new one containing the valid geometries. We save the result as a new sf polygon data.frame, papua_cleaned.\n\npapua_cleaned &lt;- papua %&gt;%\n  mutate(geometry = st_make_valid(geometry))\n\nlength(which(st_is_valid(papua_cleaned) == TRUE))\n\npapua_cleaned is projected in WGS 84. In this code chunk, we reproject it in the projected coordinate system in the DGN95 / UTM zone 53S coordinate system, and save the reprojected data as a new object papua_23883.\n\npapua_23883 &lt;- st_transform(papua_cleaned, crs = 23883) \n\nst_geometry(papua_23883)"
  },
  {
    "objectID": "pages/data_wrangling.html#preparing-the-admin1-and-admin2-layers",
    "href": "pages/data_wrangling.html#preparing-the-admin1-and-admin2-layers",
    "title": "Data Wrangling",
    "section": "",
    "text": "The WADMKK field of papua_cleaned contains the name of each city/regency that each village belongs to.\nWe first use rename() of dplyr to rename the WADMKK field to “City/Regency”. Next, we use group_by() of dplyr to group the different villages according to the province as well as city/regency they belong in. Then, we use summarise() of dplyr and st_union() of sf to combine the geometries of the different villages within each city/regency and dissolve the boundaries between villages, thus obtaining the admin2 (city/regency) level boundaries. Finally, we use ms_simplify() of rmapshaper to simplify the polygons, using the Visvalingam algorithm.\n\npapua_adm2 &lt;- papua_23883 %&gt;%\n  rename(`City/Regency` = WADMKK) %&gt;%\n  group_by(Province, `City/Regency`) %&gt;%\n  summarise(geometry = st_union(geometry)) %&gt;%\n  ms_simplify()\n\npapua_adm2\n\nWe can now save the papua_adm2 study area layer using write_rds() of readr, part of the tidyverse.\n\nwrite_rds(papua_adm2, \"data/rds/papua_adm2.rds\")\n\nWe visualise the admin2 boundaries in papua_adm2 using plot().\n\nplot(papua_adm2[\"City/Regency\"])\n\n\n\n\n\n\n\n\n\n\n\nNow, we can use group_by() of dplyr to group the different cities/regencies according to the province they belong in. Then, we use summarise() of dplyr and st_union() of sf to combine the geometries of the different cities/regencies within each province and dissolve the boundaries between them, thus obtaining the admin1 (province) level boundaries.\n\npapua_adm1 &lt;- papua_adm2 %&gt;%\n  group_by(Province) %&gt;%\n  summarise(geometry = st_union(geometry))\n\nWe can now save the papua_adm1 study area layer using the write_rds() function of readr, part of the tidyverse.\n\nwrite_rds(papua_adm1, \"data/rds/papua_adm1.rds\")\n\n\nplot(papua_adm1)"
  },
  {
    "objectID": "pages/data_wrangling.html#preparing-point-events-data",
    "href": "pages/data_wrangling.html#preparing-point-events-data",
    "title": "Data Wrangling",
    "section": "",
    "text": "We import 2015-01-01-2024-06-30-Indonesia.csv. This dataset provides location, date, and other attribute information on 6 types of armed conflict events in Indonesia occurring from 1 January 2015 to 30 June 2024. Since it is in csv format, we use the read_csv() function of readr, part of the tidyverse, to import it, and save it as an object named points.\n\npoints &lt;- read_csv(\"data/2015-01-01-2024-06-30-Indonesia.csv\")\n\nglimpse(points)\n\nRows: 17,116\nColumns: 31\n$ event_id_cnty      &lt;chr&gt; \"IDN17267\", \"IDN17269\", \"IDN17293\", \"IDN17428\", \"ID…\n$ event_date         &lt;chr&gt; \"30 June 2024\", \"30 June 2024\", \"30 June 2024\", \"30…\n$ year               &lt;dbl&gt; 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 202…\n$ time_precision     &lt;dbl&gt; 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ disorder_type      &lt;chr&gt; \"Political violence\", \"Demonstrations\", \"Demonstrat…\n$ event_type         &lt;chr&gt; \"Violence against civilians\", \"Protests\", \"Protests…\n$ sub_event_type     &lt;chr&gt; \"Attack\", \"Peaceful protest\", \"Peaceful protest\", \"…\n$ actor1             &lt;chr&gt; \"Military Forces of Indonesia (2014-)\", \"Protesters…\n$ assoc_actor_1      &lt;chr&gt; NA, \"AJI: Alliance of Independent Journalists; Jour…\n$ inter1             &lt;chr&gt; \"State forces\", \"Protesters\", \"Protesters\", \"Rebel …\n$ actor2             &lt;chr&gt; \"Civilians (Indonesia)\", NA, NA, NA, NA, \"Civilians…\n$ assoc_actor_2      &lt;chr&gt; \"TPNPB: West Papua National Liberation Army\", NA, N…\n$ inter2             &lt;chr&gt; \"Civilians\", NA, NA, NA, NA, \"Civilians\", NA, \"Stat…\n$ interaction        &lt;chr&gt; \"State forces-Civilians\", \"Protesters only\", \"Prote…\n$ civilian_targeting &lt;chr&gt; \"Civilian targeting\", NA, NA, NA, NA, \"Civilian tar…\n$ iso                &lt;dbl&gt; 360, 360, 360, 360, 360, 360, 360, 360, 360, 360, 3…\n$ region             &lt;chr&gt; \"Southeast Asia\", \"Southeast Asia\", \"Southeast Asia…\n$ country            &lt;chr&gt; \"Indonesia\", \"Indonesia\", \"Indonesia\", \"Indonesia\",…\n$ admin1             &lt;chr&gt; \"Central Papua\", \"Jakarta\", \"East Java\", \"West Java…\n$ admin2             &lt;chr&gt; \"Intan Jaya\", \"Central Jakarta\", \"Surabaya\", \"Bogor…\n$ admin3             &lt;chr&gt; \"Sugapa\", \"Gambir\", \"Genteng\", \"Central Bogor\", \"Re…\n$ location           &lt;chr&gt; \"Sugapa\", \"Jakarta - Central\", \"Surabaya\", \"Bogor\",…\n$ latitude           &lt;dbl&gt; -3.7430, -6.1806, -7.2492, -6.5944, -6.9222, 3.5833…\n$ longitude          &lt;dbl&gt; 137.0500, 106.8283, 112.7510, 106.7891, 107.6070, 9…\n$ geo_precision      &lt;dbl&gt; 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ source             &lt;chr&gt; \"Human Rights Monitor\", \"Kompas\", \"Tribunnews\", \"Ko…\n$ source_scale       &lt;chr&gt; \"Other\", \"National\", \"National\", \"National\", \"Natio…\n$ notes              &lt;chr&gt; \"On 30 June 2024, the Indonesian military forces ar…\n$ fatalities         &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ tags               &lt;chr&gt; NA, \"crowd size=no report\", \"crowd size=no report\",…\n$ timestamp          &lt;dbl&gt; 1720552459, 1720552459, 1720552459, 1721769310, 172…\n\n\n\n\n\nThe longitude and latitude fields capture the x- and y-coordinates of the data points respectively. They appear to be in the WGS 84 geographic coordinate system (in which latitudes range from -90 to 90 and longitudes range from 0 to 360).\nWe convert points to an sf object.\n\npoints_sf &lt;- st_as_sf(points, coords = c(\"longitude\",\"latitude\"), crs = 4326)\n\nst_geometry(points_sf)\n\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 95.2127 ymin: -10.7323 xmax: 140.8694 ymax: 5.8925\nGeodetic CRS:  WGS 84\nFirst 5 geometries:\n\n\nWe reproject points_sf in the DGN95 / UTM zone 53S coordinate system, and save the reprojected data as a new object points_23883.\n\npoints_23883 &lt;- st_transform(points_sf, crs = 23883)\n\nst_geometry(points_23883)\n\nGeometry set for 17116 features \nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -4304403 ymin: 8787709 xmax: 1153416 ymax: 10846150\nProjected CRS: DGN95 / UTM zone 53S\nFirst 5 geometries:\n\n\n\n\n\npoints_23883 provides information on armed conflict events throughout Indonesia, and the admin1 field contains the name of the province where each point event took place.\nAs mentioned earlier, our study area is the region of Papua, consisting of 6 provinces. 4 of these, namely Papua Selatan (South Papua), Papua Tengah (Central Papua), Papua Pegunungan (Highland Papua), Papua Barat Daya (Southwest Papua), were only created in 2022, when they were carved out of the original 2 provinces of Papua and Papua Barat (West Papua).\nWe use filter() and grepl() to extract only the armed conflict events that take place in provinces containing the word “Papua” from points_23883. In addition, we use select(), also part of dplyr, to retain only the fields containing the event date, event type, involved parties (actor 1 and actor 2), the province (admin 1) and regency/city (admin2) where the event occurred, the number of fatalities, notes about the event, and the point geometry, for each event.\nLastly, we use mutate() from dplyr and dmy() of base R to convert the values in the event_date field to Date class.\n\npoints_study &lt;- points_23883 %&gt;%\n  filter(grepl(\"Papua\", admin1, fixed = TRUE)) %&gt;%\n  select(event_date, event_type, actor1, actor2, admin1, admin2, fatalities, notes, geometry) %&gt;%\n  mutate(event_date = dmy(event_date))\n\npoints_study\n\nSimple feature collection with 2942 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -23320.68 ymin: 9056317 xmax: 1153416 ymax: 9956392\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 2,942 × 9\n   event_date event_type            actor1 actor2 admin1 admin2 fatalities notes\n * &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 2024-06-30 Violence against civ… Milit… Civil… Centr… Intan…          1 On 3…\n 2 2024-06-29 Strategic developmen… Civil… &lt;NA&gt;   Centr… Puncak          0 Disp…\n 3 2024-06-29 Battles               TPNPB… Milit… Centr… Puncak          1 On 2…\n 4 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 5 2024-06-28 Protests              Prote… &lt;NA&gt;   South… Sorong          0 On 2…\n 6 2024-06-28 Battles               TPNPB… Milit… Centr… Puncak          0 On 2…\n 7 2024-06-27 Protests              Prote… &lt;NA&gt;   South… South…          0 On 2…\n 8 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 9 2024-06-22 Battles               Milit… TPNPB… South… Maybr…          0 On 2…\n10 2024-06-22 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n# ℹ 2,932 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\nThere are 2942 features in the points_study sf point data.frame, corresponding to 2942 armed conflict point events.\nWe verify that the geometries of all the point events are valid.\n\nlength(which(st_is_valid(points_study) == TRUE))\n\n[1] 2942\n\n\n\n\n\nIn spatial point patterns analysis, a significant issue is the presence of duplicates. The statistical methodology used for spatial points patterns processes is based largely on the assumption that processes are simple, that the points cannot be coincident.\nTo check for duplicate points in points_study, we use the following code chunk:\n\nany(duplicated(points_study$geometry))\n\n[1] TRUE\n\n\nTo tackle this problem, we use st_jitter() of sf to slightly shift the duplicate points by 10 meters each such that they no longer occur at the same point, to make them unique.\n\npoints_study_jitter &lt;- points_study %&gt;%\n  st_jitter(amount = 10)"
  },
  {
    "objectID": "pages/data_wrangling.html#ensuring-consistency-in-area-names",
    "href": "pages/data_wrangling.html#ensuring-consistency-in-area-names",
    "title": "Data Wrangling",
    "section": "",
    "text": "In papua_adm1 and papua_adm2, the province and city/regency names appear to be in Bahasa Indonesia. On the other hand, in the admin1 and admin2 fields of points_study, the names given are in English.\nThe following code chunk uses filter(), group_by() and summarize() of dplyr to identify the English-language province names in points_study_jitter that are different from the Bahasa Indonesia names in papua_adm1, and vice versa.\n\npoints_study_jitter %&gt;%\n  filter(!(admin1 %in% papua_adm1$Province)) %&gt;%\n  group_by(admin1) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: -23323.36 ymin: 9056307 xmax: 1149980 ymax: 9956383\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  admin1                                                                geometry\n  &lt;chr&gt;                                                         &lt;MULTIPOINT [m]&gt;\n1 Central Papua   ((509633.3 9625055), (548483.5 9624829), (548483.9 9624835), …\n2 Highland Papua  ((799229.9 9492617), (815137.3 9535327), (815462.5 9508162), …\n3 South Papua     ((847413.8 9386172), (847415.2 9386177), (847415.9 9386180), …\n4 Southwest Papua ((-23323.36 9777960), (34593.1 9953391), (34607 9953383), (81…\n5 West Papua      ((199616.3 9676358), (199616.4 9676347), (199618.8 9676360), …\n\npapua_adm1 %&gt;%\n  filter(!(Province %in% points_study_jitter$admin1)) %&gt;%\n  group_by(Province) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: -135197 ymin: 8985733 xmax: 1167404 ymax: 10119770\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  Province                                                              geometry\n  &lt;chr&gt;                                                           &lt;GEOMETRY [m]&gt;\n1 Papua Barat      MULTIPOLYGON (((257409.2 9566412, 257428.4 9566326, 256937.4…\n2 Papua Barat Daya MULTIPOLYGON (((-87979.27 9792818, -88115.85 9792918, -88128…\n3 Papua Pegunungan POLYGON ((941726.2 9472843, 941327.6 9472931, 940247.6 94728…\n4 Papua Selatan    MULTIPOLYGON (((885530.8 9077392, 885418.5 9077170, 885388.7…\n5 Papua Tengah     MULTIPOLYGON (((522662 9507146, 522824.3 9506943, 522629 950…\n\n\nNext, we use mutate() of dplyr and str_replace_all() of stringr (also part of the tidyverse) to replace the English-language names in points_study with the Bahasa Indonesia equivalents from papua_adm1.\n\npoints_study1 &lt;- points_study_jitter %&gt;%\n  mutate(admin1 = str_replace_all(admin1, c(\"Central Papua\" = \"Papua Tengah\", \"Highland Papua\" = \"Papua Pegunungan\", \"South Papua\" = \"Papua Selatan\", \"Southwest Papua\" = \"Papua Barat Daya\", \"West Papua\" = \"Papua Barat\")))\n\nNext, we use filter(), group_by() and summarize() of dplyr again to identify the city/regency names in points_study1 that are different from the Bahasa Indonesia names in papua_adm2, and vice versa.\n\npoints_study1 %&gt;%\n  filter(!(admin2 %in% papua_adm2$`City/Regency`)) %&gt;%\n  group_by(admin2) %&gt;%\n  summarize()\n\nSimple feature collection with 5 features and 1 field\nGeometry type: MULTIPOINT\nDimension:     XY\nBounding box:  xmin: 148961.1 ymin: 9593967 xmax: 951799.2 ymax: 9867860\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 5 × 2\n  admin2                                                                geometry\n  &lt;chr&gt;                                                         &lt;MULTIPOINT [m]&gt;\n1 Central Mamberamo ((951786 9593984), (951790.2 9593972), (951792.7 9593974), …\n2 Fakfak            ((199616.3 9676358), (199616.4 9676347), (199618.8 9676360)…\n3 South Manokwari   ((407185.2 9833544), (407187 9833534), (407189.5 9833533), …\n4 South Sorong      ((148961.1 9842817), (151801.5 9837437), (164414.4 9860473)…\n5 Yapen Islands     ((602125.8 9805478), (602136 9805475), (607100.1 9801749), …\n\npapua_adm2 %&gt;%\n  filter(!(`City/Regency` %in% points_study1$admin2)) %&gt;%\n  group_by(`City/Regency`) %&gt;%\n  summarize()\n\nSimple feature collection with 8 features and 1 field\nGeometry type: GEOMETRY\nDimension:     XY\nBounding box:  xmin: 75213.72 ymin: 9561238 xmax: 1168500 ymax: 10103670\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 8 × 2\n  `City/Regency`                                                        geometry\n  &lt;chr&gt;                                                           &lt;GEOMETRY [m]&gt;\n1 Fak Fak           MULTIPOLYGON (((177915.4 9672819, 177758.2 9672809, 177621.…\n2 Kepulauan Yapen   MULTIPOLYGON (((552706.1 9814300, 552956.7 9814289, 553283.…\n3 Kota Jayapura     MULTIPOLYGON (((1168366 9684435, 1168420 9691385, 1168500 9…\n4 Kota Sorong       MULTIPOLYGON (((83597.88 9894877, 83682.29 9894911, 83547.5…\n5 Mamberamo Tengah  POLYGON ((903830.1 9582811, 904487.2 9583295, 904744.8 9583…\n6 Manokwari Selatan POLYGON ((354405.2 9830783, 354512.5 9830718, 354861 983063…\n7 Sorong Selatan    MULTIPOLYGON (((141431.6 9825800, 142083.3 9825339, 141791.…\n8 Supiori           MULTIPOLYGON (((548701 9904498, 548579.1 9904430, 548618.9 …\n\n\nWe use mutate() of dplyr and str_replace_all() of stringr to replace the names in points_study1 with the corresponding equivalents from papua_adm2.\n\npoints_study_final &lt;- points_study1 %&gt;%\n  mutate(admin2 = str_replace_all(admin2, c(\"Central Mamberamo\" = \"Mamberamo Tengah\", \"Fakfak\" = \"Fak Fak\", \"South Manokwari\" = \"Manokwari Selatan\", \"South Sorong\" = \"Sorong Selatan\", \"Yapen Islands\" = \"Kepulauan Yapen\")))\n\npoints_study_final\n\nSimple feature collection with 2942 features and 8 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -23323.36 ymin: 9056307 xmax: 1153416 ymax: 9956383\nProjected CRS: DGN95 / UTM zone 53S\n# A tibble: 2,942 × 9\n   event_date event_type            actor1 actor2 admin1 admin2 fatalities notes\n * &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;  &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;\n 1 2024-06-30 Violence against civ… Milit… Civil… Papua… Intan…          1 On 3…\n 2 2024-06-29 Strategic developmen… Civil… &lt;NA&gt;   Papua… Puncak          0 Disp…\n 3 2024-06-29 Battles               TPNPB… Milit… Papua… Puncak          1 On 2…\n 4 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 5 2024-06-28 Protests              Prote… &lt;NA&gt;   Papua… Sorong          0 On 2…\n 6 2024-06-28 Battles               TPNPB… Milit… Papua… Puncak          0 On 2…\n 7 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua… Soron…          0 On 2…\n 8 2024-06-27 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n 9 2024-06-22 Battles               Milit… TPNPB… Papua… Maybr…          0 On 2…\n10 2024-06-22 Protests              Prote… &lt;NA&gt;   Papua  Jayap…          0 On 2…\n# ℹ 2,932 more rows\n# ℹ 1 more variable: geometry &lt;POINT [m]&gt;\n\n\nWe can now save the points_study_final layer using write_rds().\n\nwrite_rds(points_study_final, \"data/rds/points_study_final.rds\")\n\nWe can now plot all the layers using tmap.\n\ntmap_mode(\"plot\")\n\ntm_shape(papua_adm1) +\n  tm_polygons(col = \"MAP_COLORS\") +\n  tm_shape(papua_adm2) +\n  tm_polygons(col = \"MAP_COLORS\") +\n  tm_shape(points_study_final) +\n  tm_dots()"
  }
]